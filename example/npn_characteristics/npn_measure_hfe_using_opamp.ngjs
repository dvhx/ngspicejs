#!/usr/bin/env ngspicejs
// Measuring hFE using opamp
// linter: ngspicejs-lint
"use strict";

battery('U1', 5, 0, 9);
var u2 = battery('U2', 0, 7, 9);
ammeter('A1', 5, 9);
ammeter('A2', 3, 4);
var t1 = npn('T1', 9, 4, 2, 'BC547B');
var r1 = resistor('R1', 2, 7, 100);
opamp('Q1', 0, 2, 5, 7, 3, 'LM258');
var t = tran().run();

echo(t.avg('I(A1)'), t.avg('I(A2)'), t.avg('I(A1)') / t.avg('I(A2)'));

var x = [], y = [], c = [], ic, ib, h, hmax = 0;
series_e3(1, '10M').forEach((r) => {
    r1.r(r);
    for (var v = 1; v <= 9; v += 1) {
        u2.v(v);
        t = tran().run();
        ic = t.avg('I(A1)');
        ib = t.avg('I(A2)');
        h = ic / ib;
        if (h > hmax) {
            hmax = h;
            echo('ic', ic, 'ib', ib, 'h', h, 'v', v, 'r', r);
        }
        x.push(v);
        y.push(r);
        c.push(h);
    }
});

var csv = [['V2', 'R1', 'hFE']];
csv_insert(csv, 0, 1, x);
csv_insert(csv, 1, 1, y);
csv_insert(csv, 2, 1, c);
file_write_csv('npn_measure_hfe_using_opamp.csv', csv);
var model_hfe = t1.get_model().attr.bf;
echo('relative error', (100 * hmax / model_hfe - 100).toFixed(1) + '% (measured ', hmax.toFixed(0), ' vs model ', model_hfe,')');


